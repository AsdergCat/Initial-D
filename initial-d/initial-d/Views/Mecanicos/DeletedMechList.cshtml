@model IEnumerable<initial_d.Models.APIModels.Mecanico>
@using initial_d.Common.FilterBar;
@{
    ViewBag.Title = "Admin. de Mecánicos";

    // Filters
    // TODO Esto depende de que filtros se deciden poner
    string userName = ViewBag.userName ?? string.Empty;
    string userEmail = ViewBag.userEmail ?? string.Empty;
    var userStatusList = (SelectList)ViewBag.userStatusLst;
    // var hasDebt
    // var hasPublicationPending

    string banId = "BAN";

    // Action URL
    string goBackUrl = Url.Action("MechList", "Mecanicos");
    // detailsUrl on Document
}

@Styles.Render("~/Content/CSS/mecanicos-general.css")

<!-- HEADER | ACTION BUTTONS -->
<div class="header ">

    <div class="header-title">
        <h2>
            <i class="fa fa-wrench" aria-hidden="true"></i>
            Mecánicos Eliminados
        </h2>

    </div>
    <!-- BUTTONS -->
    <div class="header-buttons">
        <a href="@goBackUrl" class="btn btn-sm btn-secondary mr-3" role="button">
            <i class="fa fa-caret-left" aria-hidden="true"></i>
            Mecánicos
        </a>
    </div>

</div>


<!-- BUSCAR -->
@{ 
    var filterTemplate = new FilterBarTemplate()
    {
        formAction = "DeletedMechList",
        formController = "Mecanicos",
        filters = new List<MvcHtmlString>()
        {
            Html.TextBox("userName", userName, new { @class = "form-control form-control-sm h-100", @placeholder = "Nombre de Usuario" }),
            Html.TextBox("userEmail", userEmail, new { @class = "form-control form-control-sm h-100", @placeholder = "Email" }),
            Html.DropDownList("userStatusId", userStatusList, "Status", new { @class = "custom-select custom-select-sm form-control" }),
        }
    };
}
@Html.Partial("Partial/_FiltersCollapse", filterTemplate)

<!-- DATA TABLE -->
<div class=" d-flex justify-content-center ">
    <table class="table c-info-table c-table-sm-responsive c-table-bordered">

        <thead>
            <tr>
                <th>Actions</th>
                <th>@Html.DisplayNameFor(m => m.username)</th>
                <th class="cell-hidden-lg">@Html.DisplayNameFor(m => m.fullName)</th>
                <th>@Html.DisplayNameFor(m => m.email)</th>
                <th>@Html.DisplayNameFor(m => m.status_id)</th>
                <th>@Html.DisplayNameFor(m => m.hasPendingPublication)</th>
                <th>@Html.DisplayNameFor(m => m.hasDebt)</th>
            </tr>
        </thead>

        <tbody>
            @* Print one row by Mechanic *@
            @foreach (var mech in Model)
            {
                string detailsUrl = Url.Action("MechDetails", "Mecanicos", new { mechId = mech.appuser_id });
                string userStatus = mech.status_id;
                bool? isBanned = userStatus?.Equals(banId);

                <tr class="clickable-row" data-url="@detailsUrl">

                    <!-- ACTION DROPDOWN -->
                    <td data-label="Actions" class="not-clickable">
                        @Html.Partial("Partial/_ContextualActionDropdown", new ViewDataDictionary(mech) { { "context", "deleteList" } } )
                    </td>


                    <!-- USERNAME -->
                    <td data-label="@Html.DisplayNameFor(m => m.username)">
                        @if (isBanned != null)
                        {
                            var statClass = isBanned == true ? "fa-user-lock text-danger" : "fa-user-check color-green";
                            <div class="w-max-content-sm">
                                <i class=" fa mr-1 @statClass" aria-hidden="true"></i>
                                @Html.DisplayFor(m => mech.username)
                            </div>
                        }
                    </td>

                    <!-- NOMBRE -->
                    <td data-label="@Html.DisplayNameFor(m => m.fullName)" class="cell-hidden-lg">
                        @Html.DisplayFor(m => mech.fullName)
                    </td>

                    <!-- EMAIL -->
                    <td data-label="@Html.DisplayNameFor(m => m.email)">
                        @Html.ValueFor(m => mech.email)
                    </td>

                    <!-- STATUS -->
                    <td data-label="@Html.DisplayNameFor(m => m.status_id)">
                        @Html.DisplayFor(m => mech.status_name)
                    </td>

                    <!-- PUBLICACIÓN PENIENTE -->
                    <td data-label="@Html.DisplayNameFor(m => m.hasPendingPublication)">
                        @{
                            var hasPendingPublication = mech.hasPendingPublication;
                            var str = hasPendingPublication ? "Si" : "No";
                            var color = hasPendingPublication ? "bg-green" : "bg-black";
                        }
                        <div class="c-badge ml-auto mx-sm-auto  @color">@str</div>
                    </td>

                    <!-- TIENE DEUDA -->
                    <td data-label="@Html.DisplayNameFor(m => m.hasDebt)">
                        @{
                            var hasDebt = mech.hasDebt;
                            str = hasDebt ? "Si" : "No";
                            color = hasDebt ? "bg-green" : "bg-black";
                        }
                        <div class="c-badge ml-auto mx-sm-auto  @color">@str</div>
                    </td>
                </tr>
            }
        </tbody>

    </table>

</div>


@Html.Partial("Partial/_ToggleUserStatusModal")
@Html.Partial("Partial/_DeleteModalAndScript", new ViewDataDictionary(ViewData) { { "isDeleted", true } })


@section customScripts{
    @Scripts.Render("~/Content/JS/c_table.js")
}