@model initial_d.Models.APIModels.Mecanico

@{
    ViewBag.Title = $"{Model.name} | Detalles de Mecánico";

    string update_Url = Url.Action("UpdateMech", "Mecanicos", new { userId = Model.appuser_id });
    string goBack_Url = Url.Action("MechList", "Mecanicos");
    string publications_Url = Url.Action("PubList", "PublicacionesMec");

    string mechId = Model.appuser_id;
    string mechStatus = Model.status_id;
    bool isDeleted = Model.deleted;

    string banId = "BAN";
    string actId = "ACT";
}

<!-- TITULO  |  BUTTONS -->
<div class="header">

    <div class="header-title">
        <h2>
            <i class="fa fa-wrench" aria-hidden="true"></i>
            Detalles de Mecánico
        </h2>
    </div>

    <div class="header-buttons">
        <a href="@goBack_Url" class="btn btn-sm btn-secondary mr-3" role="button">
            <i class="fa fa-caret-left" aria-hidden="true"></i>
            Volver
        </a>
        
        <a href="@publications_Url" class="btn btn-sm btn-blue mr-3" role="button">
            <i class="fa fa-newspaper" aria-hidden="true"></i>
            Ver Publicaciones
        </a>

        <!-- ACTIONS DROPDOWN -->
        @Html.Partial("Partial/_ContextualActionDropdown", new ViewDataDictionary(ViewData) { { "context", "details" } } )
    </div>

</div>


<div class="row justify-content-around">

    <div class="col-12 col-ms-11 col-md-10 col-lg-6 px-lg-2">
        <div class="c-jumbotron">
            <h3 class="@(isDeleted ? "" : "mb-4")"> Información de Sistema </h3>
            
            @* Mensaje de Mecánico Eliminado *@
            @if (isDeleted)
            {
                <div class="mt-4">
                    <p>
                        <i class="fa fa-trash-alt" aria-hidden="true" style="color:var(--red)"></i>
                        Mecánico Eliminado
                    </p>
                </div>
            }

            <table class="table table-borderless c-info-table">
                <!-- USERNAME -->
                <tr>
                    <th>@Html.DisplayNameFor(m => m.username)</th>
                    <td>@Html.DisplayFor(m => m.username)</td>
                </tr>
                
                <!-- STATUS -->
                <tr>
                    <th>@Html.DisplayNameFor(m => m.status_id)</th>
                    <td>
                        @if (Model.status_id.Equals(banId))
                        {<i class="fa fa-user-lock mr-1 text-danger" aria-hidden="true"></i>}
                        @if (Model.status_id.Equals(actId))
                        {<i class="fa fa-user-check mr-1 color-green" aria-hidden="true"></i>}
                        @Html.DisplayFor(m => m.status_name)
                    </td>
                </tr>

                <!-- USER TYPE -->
                <tr>
                    <th>@Html.DisplayNameFor(m => m.user_type_id)</th>
                    <td>@Html.DisplayFor(m => m.user_type_name)</td>
                </tr>

                <!-- EMAIL CONFIRMADO -->
                <tr>
                    <th>@Html.DisplayNameFor(m => m.mail_confirmed)</th>
                    @{
                        var emailConfirmed = Model.mail_confirmed;
                        var str = emailConfirmed ? "Si" : "No";
                        var color = emailConfirmed ? "bg-green" : "bg-black";
                    }
                    <td>
                        <div class="c-badge @color">@str</div>
                    </td>
                </tr>

                <!-- PUBLICACIÓN PENDIENTE -->
                <tr>
                    <th>@Html.DisplayNameFor(m => m.hasPendingPublication)</th>
                    <td>
                        @{
                            var hasPendingPublication = Model.hasPendingPublication;
                            str = hasPendingPublication ? "Si" : "No";
                            color = hasPendingPublication ? "bg-green" : "bg-black";
                        }
                        <div class="c-badge  @color">@str</div>
                    </td>
                </tr>

                <!-- TIENE DEUDA -->
                <tr>
                    <th>@Html.DisplayNameFor(m => m.hasDebt)</th>
                    <td>
                        @{
                            var hasDebt = Model.hasDebt;
                            str = hasDebt ? "Si" : "No";
                            color = hasDebt ? "bg-green" : "bg-black";
                        }
                        <div class="c-badge  @color">@str</div>
                    </td>
                </tr>
                
                <!-- LAST LOGIN -->
                <tr>
                    <th>@Html.DisplayNameFor(m => m.lastlogin)</th>
                    <td>@Html.DisplayFor(m => m.lastlogin)</td>
                </tr>
                
                <!-- UPDATED AT -->
                <tr>
                    <th>@Html.DisplayNameFor(m => m.updated_at)</th>
                    <td>@Html.DisplayFor(m => m.updated_at)</td>
                </tr>

                <!-- CREATED AT -->
                <tr>
                    <th>@Html.DisplayNameFor(m => m.created_at)</th>
                    <td>@Html.DisplayFor(m => m.created_at)</td>
                </tr>
            </table>

        </div>
    </div>

    <div class="col-12 col-ms-11 col-md-10 col-lg-6 px-lg-2">
        <div class="c-jumbotron">
            <h3 class="mb-4"> Información Personal </h3>

            <table class="table table-borderless c-info-table">
                <tr>
                    <th>@Html.DisplayNameFor(m => m.name)</th>
                    <td>@Html.DisplayFor(m => m.name)</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(m => m.last_names)</th>
                    <td>@Html.DisplayFor(m => m.last_names)</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(m => m.email)</th>
                    <td>@Html.DisplayFor(m => m.email)</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(m => m.adress)</th>
                    <td>@Html.DisplayFor(m => m.adress)</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(m => m.phone)</th>
                    <td>@Html.DisplayFor(m => m.phone)</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(m => m.birthday)</th>
                    <td>@Html.DisplayFor(m => m.birthday)</td>
                </tr>
            </table>

        </div>
    </div>

</div>


@Html.Partial("Partial/_ToggleUserStatusModal")
@Html.Partial("Partial/_DeleteModalAndScript", new ViewDataDictionary(ViewData) { { "isDeleted", isDeleted } })
