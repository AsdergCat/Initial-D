@model initial_d.Models.APIModels.Servicio

@{
    ViewBag.Title = $"{Model.name} | Actualizar Datos";

    var servStatusList = (SelectList)ViewBag.servStatusList;

    string GoBack_Url = Url.Action("ServDetails", "Servicios", new { servId = Model.serv_id});
}

<div class="header">
    
    <div class="header-title">
        <h2>
            <i class="fa fa-edit" aria-hidden="true"></i>
            Actualizar Datos
        </h2>
    </div>

</div>


@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.serv_id);
    @Html.HiddenFor(m => m.created_at);
    @Html.HiddenFor(m => m.updated_at);
    @Html.HiddenFor(m => m.deleted);

    @* FORM CONTAINER *@
    <div class="row justify-content-start mb-4">

        <div class="col-12 col-ms-11 col-md-10 col-lg-10 px-lg-2">
            <div class="c-jumbotron">
                <h3 class="mb-4"> Información General </h3>

                <table class="table table-borderless c-info-table c-table-left c-table-sm-responsive table-th-compact">
                    <tr>
                        <th>@Html.DisplayNameFor(m => m.name)</th>
                        <td>
                            @Html.TextBoxFor(m => m.name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.name)
                        </td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(m => m.price)</th>
                        <td>
                            @Html.TextBox("exposedPrice", "", new { @class = "form-control money-editor", data_og_editor="price" })
                            @Html.HiddenFor(m => m.price)
                            @Html.ValidationMessageFor(x => x.price)
                        </td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(m => m.serv_desc)</th>
                        <td>
                            @Html.TextAreaFor(m => m.serv_desc, new { @class = "form-control", rows = 5 })
                            @Html.ValidationMessageFor(x => x.serv_desc)
                        </td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(m => m.estimated_time)</th>
                        <td>
                            <div class="row">
                                @Html.TextBoxFor(m => m.estimated_time, new { @class = "form-control w-max-content w-5rem mr-3"})
                                <p class="m-0">Minutos</p>
                            </div>
                            @Html.ValidationMessageFor(x => x.estimated_time)
                        </td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(m => m.serv_status)</th>
                        <td>
                            <div class="row ">
                                @Html.DropDownListFor(m => m.serv_status, servStatusList, new { @class = "custom-select custom-select-sm form-control w-auto",  style="min-width: 0px;" })
                            </div>
                            @Html.ValidationMessageFor(x => x.serv_status)
                        </td>
                    </tr>
                </table>

            </div>
        </div>

    </div>

    @* ACTION BUTTONS *@
    <div>
        <a href="@GoBack_Url" class="btn btn-sm btn-secondary mr-3" role="button">
            <i class="fa fa-backspace" aria-hidden="true"></i>
            Cancelar
        </a>
        <button href="#" class="btn btn-sm btn-green mr-3" role="button">
            <i class="fa fa-save" aria-hidden="true"></i>
            Guardar
        </button>
    </div>

}


@section customScripts{
    @Scripts.Render("~/Content/JS/money-editor.js")
}