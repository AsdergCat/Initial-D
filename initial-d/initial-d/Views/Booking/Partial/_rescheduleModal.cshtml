@model initial_d.Models.APIModels.BookingVM

@{ 
    int servDur = Model.serv?.estimated_time ?? 0;
}


<div id="update-store-sche-modal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("RescheduleBook", "Booking", FormMethod.Post))
            {
                @Html.HiddenFor(m => m.booking_id)
                @Html.HiddenFor(m => m.appuser_id)
                @Html.HiddenFor(m => m.status_booking_id)
                @Html.HiddenFor(m => m.updated_at)
                @Html.HiddenFor(m => m.createdAtString)
                @Html.HiddenFor(m => m.deleted)
                @Html.HiddenFor(m => m.serv_id)


                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fa fa-history" aria-hidden="true"></i>
                        Reagendar Reserva
                    </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">

                    <p>Selecciona la nueva hora para la reserva</p>
                    <p>El servicio dura @servDur minutos</p>

                    @(Model.start_date_hour?.ToString("yyyy-MM-ddTHH:mm"))

                    <div class="form-group">
                        @Html.LabelFor(m => m.start_date_hour)
                        @Html.Hidden("start_date_hour", Model.start_date_hour?.ToString("yyyy-MM-ddTHH:mm"))
                        <div id="start_date_hour_view" class="row flex-row-reverse justify-content-end"></div>
                        @Html.ValidationMessageFor(m => m.start_date_hour)
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(m => m.end_date_hour)
                        @Html.Hidden("end_date_hour", Model.end_date_hour?.ToString("yyyy-MM-ddTHH:mm"))
                        <h4 id="end_date_hour_view"> </h4>
                    </div>

                </div>

                <div class="modal-footer">
                    <a role="button" href="#" class="btn btn-sm btn-secondary" data-dismiss="modal">
                        <i class="fa fa-backspace" aria-hidden="true"></i>
                        <span>Volver</span>
                    </a>

                    <button type="submit" class="btn btn-sm btn-green">
                        <i class="fa fa-history" aria-hidden="true"></i>
                        Reagendar
                    </button>
                </div>
            }
        </div>
    </div>
</div>

<script>
    WaitForJquery(function () {

        // Setea el string de hora de termino en el modal
        $('#end_date_hour_view').text(moment($('#end_date_hour').val()).format('DD/MM/YYYY HH:mm'))

        // El validador de fechas de mvc5 está malo, esto lo parchea
        $(function () {
            $.validator.methods.date = function (value, element) {
                return this.optional(element) || moment(value, "YYYY-MM-DDTHH:mm", true).isValid();
            }
        });

        // Inicializa el picker cuando se abre el modal. Si no es así no funciona. Ni idea por que >:/
        $(document).on('shown.bs.modal', '#update-store-sche-modal', startPicker);

    });

    function startPicker() {

        // El tiempo se inicia 10 min adelantado siempre por alguna razon. Parche para restarle 10 min a la hora real siempre
        let t = moment($('#start_date_hour').val()).add(-10, 'minutes').format();

        // Get timestamp para esa fecha/hora
        var timestamp = new Date(t).getTime();

        // Setea la configuración del datetime picker
        var config = {
            target: 'start_date_hour_view',
            disableAmPm: true,
            future: true,
            timestamp: timestamp
        };

        // Inicializa el datetime picker
        var startDatePickerView = new MtrDatepicker(config);

        // Mueve el dia antes del mes
        $('#start_date_hour_view-input-months').insertAfter($('#start_date_hour_view-input-dates'));

        // Evento que se ejecuta cada vez que cambia un valor del datetime picker
        // Cambia los hidden input para el formulario
        startDatePickerView.onChange('all', function() {
            let newTime = startDatePickerView.toISOString();

            $('#start_date_hour').val(newTime);

            let startTime = $('#start_date_hour').val();

            let endTime = moment(startTime).add(@servDur, 'minutes').format('YYYY-MM-DDTHH:mm');
            $('#end_date_hour').val(endTime);

            $('#end_date_hour_view').text(moment(endTime).format('DD/MM/YYYY HH:mm'))
        });
    }

</script>
