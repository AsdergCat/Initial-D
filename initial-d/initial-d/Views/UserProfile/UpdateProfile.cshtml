@model initial_d.Models.APIModels.Usuario

@{
    ViewBag.Title = "Actualizar Datos Personales";

    string GoBack_Url = Url.Action("Profile", "UserProfile");
}

<div class="header">

    <div class="header-title">
        <h2>
            <i class="fa fa-user-edit" aria-hidden="true"></i>
            @ViewBag.Title
        </h2>
    </div>

</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
    @Html.HiddenFor(m => m.appuser_id);

    @* FORM CONTAINER *@
    <div class="row justify-content-start mb-4">

        <div class="col-12 col-ms-11 col-md-10 col-lg-8 col-xl-6 px-lg-2">
            <div class="c-jumbotron">
                <h3 class="mb-4"> Información Personal </h3>

                <table class="table table-borderless c-info-table c-table-left c-table-sm-responsive table-th-compact">
                    <tr>
                        <th>@Html.DisplayNameFor(m => m.name)</th>
                        <td>
                            @Html.TextBoxFor(m => m.name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.name)
                        </td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(m => m.last_names)</th>
                        <td>
                            @Html.TextBoxFor(m => m.last_names, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.last_names)
                        </td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(m => m.rut)</th>
                        <td>
                            @Html.TextBoxFor(m => m.rut, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.rut)
                        </td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(m => m.email)</th>
                        <td>
                            @Html.TextBoxFor(m => m.email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.email)
                        </td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(m => m.adress)</th>
                        <td>
                            @Html.TextBoxFor(m => m.adress, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.adress)
                        </td>

                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(m => m.phone)</th>
                        <td>
                            @Html.TextBoxFor(m => m.phone, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.phone)
                        </td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(m => m.birthday)</th>
                        <td>
                            @Html.TextBoxFor(m => m.birthday, new { @class = "form-control datepicker-bd", @Value = Model.birthday.ToString("dd/MM/yyyy") })
                            @Html.ValidationMessageFor(x => x.birthday)
                        </td>
                    </tr>
                </table>

            </div>
        </div>
    </div>

    @* ACTION BUTTONS *@
    <div>
        <a href="@GoBack_Url" class="btn btn-sm btn-secondary mr-3" role="button">
            <i class="fa fa-backspace" aria-hidden="true"></i>
            Cancelar
        </a>
        <button href="#" class="btn btn-sm btn-green mr-3" role="button">
            <i class="fa fa-save" aria-hidden="true"></i>
            Guardar
        </button>
    </div>
}


@section customScripts{
    @Html.Partial("Partial/_DatePickerBoilerplate")

    <script>
    
        $('.datepicker-bd').datepicker({
            startDate: '-110y',
            endDate: '-18y'
        });

        $(function() {
            $.validator.addMethod(
                "regex",
                function(value, element, regexp) {
                    var re = new RegExp(regexp);
                    return this.optional(element) || re.test(value);
                },
                "Rut Invalido. Debe tener el formato: 12.123.123-1"
            );

            $('#rut').rules('add', {
                regex: /^\d{1,2}\.\d{3}\.\d{3}-[k|K|\d]{1}$/
            });

        });

    </script>
}

